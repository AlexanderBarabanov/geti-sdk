name: Build and publish package

on:
  workflow_dispatch:

  release:
    types: [published]

env:
  PYPI_USER: ${{ secrets.SCLAB_PYPI_USERNAME }}
  PYPI_PASSWORD: ${{ secrets.SCLAB_PYPI_PASSWORD }}
  PYPI_HOST: ${{ secrets.SCLAB_PYPI_HOSTNAME }}
  PYPI_PORT: ${{ secrets.SCLAB_PYPI_PORT }}

jobs:
  build_sdk:
    runs-on: self-hosted
    steps:
      - name: Checkout code with caching for Git LFS
        uses: nschloe/action-cached-lfs-checkout@v1.1.2

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      - name: Install package with dev and notebook requirements
        run: |
          python -m pip install --upgrade pip
          pip install ".[dev,notebooks]"

      - name: Install build tools
        run: pip install build twine

      - name: Build package
        run: python -m build

      - name: Check package contents
        run: twine check dist/*

      - name: Upload wheel and source files as github artifact
        # Publish the built wheel and source tarball to github
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: geti_sdk
          path: dist

      - name: Publish SDK package to pypi
        run: |
          export no_proxy=$PYPI_HOST
          export REPOSITORY_URL=http://$PYPI_HOST:$PYPI_PORT
          twine upload --repository-url $REPOSITORY_URL dist/* -u $PYPI_USER -p $PYPI_PASSWORD

      - name: Clean up dist directory if it was created
        if: ${{ always() }}
        run: |
          if OUTPUT=$(ls | grep -c dist)
          then
            echo "Cleaning up dist directory"
            rm -r dist
          fi
