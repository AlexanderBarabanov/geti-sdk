name: Nightly tests

on:
  workflow_dispatch: # run on request (no need for PR)
  schedule:
    - cron: "0 0 * * *"

env:
  # Environment variables, login details for the SC instance to run the tests against
  # Secrets are configured on repository level (Settings > Secrets)
  SC_HOST: ${{ secrets.SC_HOST }}
  SC_USERNAME: ${{ secrets.SC_USERNAME }}
  SC_PASSWORD: ${{ secrets.SC_PASSWORD }}

  # Other environment variables used in the tests
  TEST_MODE: "ONLINE"
  CLEAR_EXISTING_TEST_PROJECTS: 1
  ARTIFACT_DIRECTORY: artifacts

  # Conda environment
  CONDA_ENV: sc_sdk_nightly_test_environment

jobs:
  build:
    runs-on: self-hosted

    steps:

      - name: Checkout code with caching for Git LFS
        uses: nschloe/action-cached-lfs-checkout@v1.1.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: true
          activate-environment: ""

      - name: Create fresh conda environment
        run: |
          conda info --envs > temp_envs.txt
          if grep --quiet $CONDA_ENV temp_envs.txt; then
          echo Conda environment $CONDA_ENV exists, removing for clean start
          conda remove -y --name $CONDA_ENV --all
          fi
          conda create -y -n $CONDA_ENV python=3.8
          rm temp_envs.txt

      - name: Install package with deployment and test requirements
        run: |
          conda activate $CONDA_ENV
          python -m pip install --upgrade pip
          pip install ".[deployment,tests]"

      - name: Create artifact directory
        run: mkdir $ARTIFACT_DIRECTORY

      - name: Nightly tests
        # Proxy settings have to be configured and SC_HOST set to full address before
        # tests can run
        run: |
          export no_proxy=$SC_HOST,$no_proxy
          export NO_PROXY=$SC_HOST,$NO_PROXY
          export SC_HOST=https://$SC_HOST

          conda activate $CONDA_ENV

          pytest tests/nightly --cov=sc_api_tools

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: artifacts
          path: $ARTIFACT_DIRECTORY

      - name: Clean up artifact directory
        if: ${{ always() }}
        run: rm -r $ARTIFACT_DIRECTORY

      - name: Integration tests
        run: |
          pytest tests/integration -c tests/offline.ini --cov=sc_api_tools

